
Here, 3^13 will be 3^(1101) in base 2 so at max we would require only log(N) multiplication.

if( n == 0 ) x^n = 1;
if(n is even)  x^n = x^(n/2)2 
if n is odd x^n = x*(x^((n-1)/2)) 


long long binpow(long long a, long long b, long long m) {
    a %= m;
    long long res = 1;
    while (b > 0) {
        if (b & 1)
            res = res * a % m;
        a = a * a % m;
        b >>= 1;
    }
    if(res < 0) return (res + m)%m;
    return res;
}



int Solution::pow(int x, int n, int p) {
     if (n == 0) 
        return 1 % p;

    long long ans = 1, base = x;
    while (n > 0) 
    {
        if (n % 2 == 1)
        {
            ans = (ans * base) % p;
            n--;
        } 
        else
        {
            base = (base * base) % p;
            n /= 2;
        }
    }
    if (ans < 0) 
        ans = (ans + p) % p;
    return ans;
}

