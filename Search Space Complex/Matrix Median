int Solution::findMedian(vector<vector<int> > &A) {
    int n = A.size(), m = A[0].size();
    int l = 1, r = 1e9 ,ans;
    
    auto check = [&](int num){
        int cnt = 0;
        for(int i = 0; i < n; i++){
            auto itr = upper_bound(A[i].begin(), A[i].end(), num);
            cnt += (itr - A[i].begin());
        }  
        return cnt > (n*m)/2;
    };
    
    while(l <= r){
        int mid = l + (r - l)/2;
        if(check(mid)){
            ans = mid;
            r = mid - 1;
        }
        else{
            l = mid + 1;
        }
    }
    return ans;
}
